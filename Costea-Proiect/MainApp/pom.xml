<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Păstrăm Spring Boot ca parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>news-distributed-system</groupId>
    <artifactId>news-distributed-system</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>MainApp</name>
    <description>MainApp - Distributed News System</description>

    <properties>
        <java.version>17</java.version>
        <!-- Poți pune plugin-ul de assembly la ce versiune vrei -->
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    </properties>

    <dependencies>
        <!-- Dependință principală Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Lombok (opțional) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Test (opțional) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Dacă vrei RMI, JMS, etc., le adaugi tot aici -->
    </dependencies>

    <build>
        <plugins>

            <!-- PLUGIN 1: Compiler plugin (pentru Java 17 + Lombok) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.28</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- PLUGIN 2: Spring Boot Maven Plugin
                 - Dacă vrei să genereze un jar executabil (fat-jar) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--
                     mainClass = clasa principală a aplicației (ex. com.example.news.node.MainAppApplication)
                     Dar tu poți avea NodeMain, ClientMain, etc.
                     -->
                    <mainClass>com.example.news.node.MainAppApplication</mainClass>

                    <!-- Excludem Lombok din jar -->
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- PLUGIN 3 (OPȚIONAL): Maven Assembly
                 - Ca să poți construi un jar "with-dependencies" diferit de cel spring-boot.
                 - POȚI sări peste el dacă preferi doar jar-ul Spring Boot. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- Poți alege ce mainClass dorești pentru JAR-ul “assembly” -->
                            <mainClass>com.example.news.node.MainAppApplication</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
